on:
  push:
    tags:
    - '*'
    branches:
    - '*'
  pull_request:
    branches:
    - '*'
  # repository_dispatch is a newer github-actions feature that will allow building from triggers other than code merge/PR
  repository_dispatch:
    types: [build]

name: Build Nemesis
jobs:

  build:
    timeout-minutes: 40
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        #os: [ubuntu-18.04, macos-10.15, windows-2016]
    continue-on-error: true

    steps:
      - name: git checkout
        uses: actions/checkout@master
        continue-on-error: false

      - name: get tag & short-sha
        run: |
          echo "REVISION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        continue-on-error: true

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: '12'
        continue-on-error: false

      # for debugging
      - name: show variables
        run: |
          echo "Build: ${{ github.RUN_NUMBER }}"
          echo "Commit: ${{ github.SHA }}"
          echo "Short: ${{ env.SHORT_SHA }}"
          echo "Ref: ${{ github.REF}}"
          echo "Tag: ${{ env.REVISION_TAG }}"
          echo "Actor: ${{ github.ACTOR }}"
          echo "Repo: ${{ github.REPOSITORY }}"
        continue-on-error: true

      - name: Build Linux
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rm -rf ./build/
          rm -rf ./dist/
          npm install -g npm@6
          npm config set python /usr/bin/python2.7
          npm install -g n
          sudo n 12
          npm install usb@1.6.1 --save
          npm install --save --save-exact --include=dev
          echo "############ pack #############"
          npm run electron-pack
          echo "############ dist #############"
          npm run dist --publish=never
        continue-on-error: false

      - name: Build OSX
        if: ${{ startsWith(matrix.os, 'macos') }}
        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rm -rf ./build/
          rm -rf ./dist/
          #brew install libusb
          npm install -g npm@6
          npm config set python /usr/bin/python2.7
          npm install -g n
          sudo n 12
          npm install usb@1.6.1 --save
          npm install --save --save-exact --include=dev
          echo "############ pack #############"
          npm run electron-pack
          echo "############ dist #############"
          npm run dist --publish=never
        continue-on-error: false


      - name: Build Windows
        if: ${{ startsWith(matrix.os, 'windows') }}
        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rm -Confirm:$false -Recurse ./build -ErrorAction:SilentlyContinue
          rm -Confirm:$false -Recurse ./dist -ErrorAction:SilentlyContinue
          #npm install yarn
          #npm install -g --production windows-build-tools
          npm install -g npm@6
          npm config set python %USERPROFILE%\.windows-build-tools\python27\python.exe
          npm install usb@1.6.1 --save
          npm install --save --save-exact --include=dev
          echo "############ pack #############"
          npm run electron-pack
          echo "############ dist #############"
          npm run dist --publish=never
        continue-on-error: false

      - name: Upload Artifacts
        uses: actions/upload-artifact@master
        with:
          name: Nemesis-${{ github.ACTOR }}-${{ github.RUN_NUMBER }}
          path: |
            dist/Nemesis*.AppImage
            dist/Nemesis*.dmg
            dist/Nemesis*.exe

  draft:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    timeout-minutes: 10
    continue-on-error: false
    runs-on: ubuntu-latest
    steps:

      # for debugging
      - name: show variables
        run: |
          echo "Build: ${{ github.RUN_NUMBER }}"
          echo "Commit: ${{ github.SHA }}"
          echo "Ref: ${{ github.REF}}"
          echo "Actor: ${{ github.ACTOR }}"
          echo "Repo: ${{ github.REPOSITORY }}"
        continue-on-error: true

      - name: download artifacts
        uses: actions/download-artifact@master
        with:
          name: EmuConfigurator-${{ github.ACTOR }}-${{ github.RUN_NUMBER }}
        continue-on-error: false

      - name: list artifacts
        run: |
          ls -lh ./*.???
        continue-on-error: true

      - name: draft release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@master
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./emuflight-configurator*.???
          draft: true
          prerelease: true
          tag_name: ${{ github.RUN_NUMBER }}   # use the build Number, but we manually change to version so that it creates a version-tag on release
          name:  DRAFT / EmuConfigurator / GitHub Build ${{ github.RUN_NUMBER }}
          body: |
            ### Build: ${{ github.RUN_NUMBER }}
            ### Commit: ${{ github.SHA }}
            ### Ref: ${{ github.REF}}
            ### Actor: ${{ github.ACTOR }}
            ### Repo: ${{ github.REPOSITORY }}
        continue-on-error: true
